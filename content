# GitHub Concepts

To use GitHub, it is important to understand the basic git commands you use to synchronize changes between your local branches, commits, and the remote repository.

## What is the difference between fetch, merge, push and pull?

The following GitHub commands synchronize changes:

- `git fetch` - Download all history from the remote tracking branches.
- `git merge` - Combine remote tracking branches into current local branch.
- `git push` - Push changes from a local branch to a remote repository.
- `git pull` - Update local repository to the newest commit.

### Fetch

The `git fetch` command takes the current branch and checks to see if there is a tracking branch. If there is a tracking branch, `git fetch` looks for changes in the remote branch and pulls those changes into the tracking branch. 

A `git fetch` does not change your local branch.

### Merge

To change your local branch, run `git merge origin/main` to merge changes into your `main` branch.

### Push

The `git push` command takes your current branch and checks if there is a tracking branch for a remote repository connected to it. If so, push your branch changes to the remote branch. This process is how you share code with a remote repository.

The `push` command fails if all the commits in the remote branch are not in your local branch. When `git push` fails, synchronize your local branch with `git pull` or `git fetch` and `git merge`.

### Pull

The `git pull` command is a combination of `git fetch` and `git merge`.

You may want to use `git fetch` followed by `git merge` to make sure you understand the changes you're merging into your branch before the merge happens.
